/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockWETH, MockWETHInterface } from "../MockWETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b8152506040518060400160405280600381526020016208aa8960eb1b81525081600390805190602001906200006c9291906200008b565b508051620000829060049060208401906200008b565b5050506200016e565b828054620000999062000131565b90600052602060002090601f016020900481019282620000bd576000855562000108565b82601f10620000d857805160ff191683800117855562000108565b8280016001018555821562000108579182015b8281111562000108578251825591602001919060010190620000eb565b50620001169291506200011a565b5090565b5b808211156200011657600081556001016200011b565b600181811c908216806200014657607f821691505b602082108114156200016857634e487b7160e01b600052602260045260246000fd5b50919050565b610c8c806200017e6000396000f3fe6080604052600436106100c25760003560e01c8063395093511161007f578063a457c2d711610059578063a457c2d71461020a578063a9059cbb1461022a578063d0e30db01461024a578063dd62ed3e1461025257600080fd5b8063395093511461019f57806370a08231146101bf57806395d89b41146101f557600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd146101415780632e1a7d4d14610161578063313ce56714610183575b600080fd5b3480156100d357600080fd5b506100dc610298565b6040516100e99190610b81565b60405180910390f35b3480156100fe57600080fd5b5061011261010d366004610b3e565b61032a565b60405190151581526020016100e9565b34801561012e57600080fd5b506002545b6040519081526020016100e9565b34801561014d57600080fd5b5061011261015c366004610b02565b610340565b34801561016d57600080fd5b5061018161017c366004610b68565b6103ef565b005b34801561018f57600080fd5b50604051601281526020016100e9565b3480156101ab57600080fd5b506101126101ba366004610b3e565b61047b565b3480156101cb57600080fd5b506101336101da366004610aad565b6001600160a01b031660009081526020819052604090205490565b34801561020157600080fd5b506100dc6104b7565b34801561021657600080fd5b50610112610225366004610b3e565b6104c6565b34801561023657600080fd5b50610112610245366004610b3e565b61055f565b61018161056c565b34801561025e57600080fd5b5061013361026d366004610acf565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a790610c05565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610c05565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b6000610337338484610578565b50600192915050565b600061034d84848461069d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103d75760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e48533858403610578565b506001949350505050565b336000908152602081905260409020548111156104405760405162461bcd60e51b815260206004820152600f60248201526e62616c616e636520746f6f206c6f7760881b60448201526064016103ce565b61044a338261086c565b604051339082156108fc029083906000818181858888f19350505050158015610477573d6000803e3d6000fd5b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103379185906104b2908690610bd6565b610578565b6060600480546102a790610c05565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105485760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ce565b6105553385858403610578565b5060019392505050565b600061033733848461069d565b61057633346109b2565b565b6001600160a01b0383166105da5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ce565b6001600160a01b03821661063b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ce565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ce565b6001600160a01b0382166107635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ce565b6001600160a01b038316600090815260208190526040902054818110156107db5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ce565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610812908490610bd6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161085e91815260200190565b60405180910390a350505050565b6001600160a01b0382166108cc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103ce565b6001600160a01b038216600090815260208190526040902054818110156109405760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103ce565b6001600160a01b038316600090815260208190526040812083830390556002805484929061096f908490610bee565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610690565b6001600160a01b038216610a085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ce565b8060026000828254610a1a9190610bd6565b90915550506001600160a01b03821660009081526020819052604081208054839290610a47908490610bd6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610aa857600080fd5b919050565b600060208284031215610abf57600080fd5b610ac882610a91565b9392505050565b60008060408385031215610ae257600080fd5b610aeb83610a91565b9150610af960208401610a91565b90509250929050565b600080600060608486031215610b1757600080fd5b610b2084610a91565b9250610b2e60208501610a91565b9150604084013590509250925092565b60008060408385031215610b5157600080fd5b610b5a83610a91565b946020939093013593505050565b600060208284031215610b7a57600080fd5b5035919050565b600060208083528351808285015260005b81811015610bae57858101830151858201604001528201610b92565b81811115610bc0576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610be957610be9610c40565b500190565b600082821015610c0057610c00610c40565b500390565b600181811c90821680610c1957607f821691505b60208210811415610c3a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220388651b2df70d6960d561a151ae5a1a8cfd14fb56459d5652bc77f231c7b481164736f6c63430008070033";

export class MockWETH__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockWETH> {
    return super.deploy(overrides || {}) as Promise<MockWETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockWETH {
    return super.attach(address) as MockWETH;
  }
  connect(signer: Signer): MockWETH__factory {
    return super.connect(signer) as MockWETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWETHInterface {
    return new utils.Interface(_abi) as MockWETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWETH {
    return new Contract(address, _abi, signerOrProvider) as MockWETH;
  }
}
