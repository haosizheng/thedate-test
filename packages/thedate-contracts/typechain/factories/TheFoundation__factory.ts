/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TheFoundation, TheFoundationInterface } from "../TheFoundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "releaseERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "releasedERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "totalReleasedERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014f9380380620014f98339810160408190526200003491620003f1565b818181818051825114620000aa5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b6000825111620000fd5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f207061796565730000000000006044820152606401620000a1565b60005b825181101562000181576200016c8382815181106200012f57634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106200015857634e487b7160e01b600052603260045260246000fd5b60200260200101516200018e60201b60201c565b80620001788162000542565b91505062000100565b505050505050506200058c565b6001600160a01b038216620001fb5760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000a1565b600081116200024d5760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a207368617265732061726520300000006044820152606401620000a1565b6001600160a01b03821660009081526002602052604090205415620002c95760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b6064820152608401620000a1565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384169081179091556000908152600260205260408120829055546200033190829062000527565b600055604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b600082601f8301126200038b578081fd5b81516020620003a46200039e8362000501565b620004ce565b80838252828201915082860187848660051b8901011115620003c4578586fd5b855b85811015620003e457815184529284019290840190600101620003c6565b5090979650505050505050565b6000806040838503121562000404578182fd5b82516001600160401b03808211156200041b578384fd5b818501915085601f8301126200042f578384fd5b81516020620004426200039e8362000501565b8083825282820191508286018a848660051b890101111562000462578889fd5b8896505b848710156200049b5780516001600160a01b03811681146200048657898afd5b83526001969096019591830191830162000466565b5091880151919650909350505080821115620004b5578283fd5b50620004c4858286016200037a565b9150509250929050565b604051601f8201601f191681016001600160401b0381118282101715620004f957620004f962000576565b604052919050565b60006001600160401b038211156200051d576200051d62000576565b5060051b60200190565b600082198211156200053d576200053d62000560565b500190565b600060001982141562000559576200055962000560565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610f5d806200059c6000396000f3fe60806040526004361061007a5760003560e01c806319165587146100bf57806319766c48146100e15780633a98ef39146101145780638b83209b146101295780639852595c14610161578063cdd9ac3814610197578063ce7c2ac2146101b7578063e33b7de3146101d7578063f9a76be2146101ec57600080fd5b366100ba577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033346040516100b0929190610e47565b60405180910390a1005b600080fd5b3480156100cb57600080fd5b506100df6100da366004610d58565b61020c565b005b3480156100ed57600080fd5b506101016100fc366004610d58565b6103d8565b6040519081526020015b60405180910390f35b34801561012057600080fd5b50600054610101565b34801561013557600080fd5b50610149610144366004610dde565b6104c9565b6040516001600160a01b03909116815260200161010b565b34801561016d57600080fd5b5061010161017c366004610d58565b6001600160a01b031660009081526003602052604090205490565b3480156101a357600080fd5b506101016101b2366004610dac565b610507565b3480156101c357600080fd5b506101016101d2366004610d58565b610608565b3480156101e357600080fd5b50600154610101565b3480156101f857600080fd5b506100df610207366004610d74565b610623565b6001600160a01b0381166000908152600260205260409020546102855760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b6000600154476102959190610e8b565b6001600160a01b038316600090815260036020908152604080832054835460029093529083205493945091926102cb9085610ec3565b6102d59190610ea3565b6102df9190610ee2565b9050806103425760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b606482015260840161027c565b6001600160a01b038316600090815260036020526040902054610366908290610e8b565b6001600160a01b03841660009081526003602052604090205560015461038d908290610e8b565b60015561039a8382610afa565b7fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b05683826040516103cb929190610e47565b60405180910390a1505050565b6000816103e481610c18565b1561041b576103fa816336372b0760e01b610c4c565b6104165760405162461bcd60e51b815260040161027c90610e60565b6104ac565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610df6565b10156104ac5760405162461bcd60e51b815260040161027c90610e60565b50506001600160a01b031660009081526005602052604090205490565b6000600482815481106104ec57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b60008161051381610c18565b1561054a57610529816336372b0760e01b610c4c565b6105455760405162461bcd60e51b815260040161027c90610e60565b6105db565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561058557600080fd5b505afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190610df6565b10156105db5760405162461bcd60e51b815260040161027c90610e60565b50506001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6001600160a01b031660009081526002602052604090205490565b8061062d81610c18565b1561066457610643816336372b0760e01b610c4c565b61065f5760405162461bcd60e51b815260040161027c90610e60565b6106f5565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069f57600080fd5b505afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d79190610df6565b10156106f55760405162461bcd60e51b815260040161027c90610e60565b600061070084610608565b116107455760405162461bcd60e51b81526020600482015260156024820152744163636f756e7420686173206e6f2073686172657360581b604482015260640161027c565b6001600160a01b0382166000818152600560205260408082205490516370a0823160e01b81523060048201528593906370a082319060240160206040518083038186803b15801561079557600080fd5b505afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190610df6565b6107d79190610e8b565b6001600160a01b0380871660009081526006602090815260408083209389168352929052908120549192509061080c60005490565b61081588610608565b61081f9085610ec3565b6108299190610ea3565b6108339190610ee2565b9050600081116108855760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e74206973206e6f7420647565207061796d656e74000000000000604482015260640161027c565b60405163095ea7b360e01b81526000906001600160a01b0385169063095ea7b3906108b69030908690600401610e47565b602060405180830381600087803b1580156108d057600080fd5b505af11580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190610dbe565b9050806109625760405162461bcd60e51b815260206004820152602260248201527f455243323020646f6573206e6f7420617070726f766520746865207061796d656044820152611b9d60f21b606482015260840161027c565b6040516323b872dd60e01b81523060048201526001600160a01b03888116602483015260448201849052600091908616906323b872dd90606401602060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee9190610dbe565b905080610a3d5760405162461bcd60e51b815260206004820181905260248201527f4552433230207472616e73666572206973206e6f74207375636365737366756c604482015260640161027c565b6001600160a01b038089166000908152600660209081526040808320938b1683529290529081208054859290610a74908490610e8b565b90915550506001600160a01b03871660009081526005602052604081208054859290610aa1908490610e8b565b9091555050604080516001600160a01b038a811682526020820186905289168183015290517f8197a9e2768bbdb1a86328467612ccc099a6776e4e3a02463608fba4976c659f9181900360600190a15050505050505050565b80471015610b4a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161027c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b97576040519150601f19603f3d011682016040523d82523d6000602084013e610b9c565b606091505b5050905080610c135760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161027c565b505050565b6000610c2b826301ffc9a760e01b610c6f565b8015610c465750610c44826001600160e01b0319610c6f565b155b92915050565b6000610c5783610c18565b8015610c685750610c688383610c6f565b9392505050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090610cd6908690610e0e565b6000604051808303818686fa925050503d8060008114610d12576040519150601f19603f3d011682016040523d82523d6000602084013e610d17565b606091505b5091509150602081511015610d325760009350505050610c46565b818015610d4e575080806020019051810190610d4e9190610dbe565b9695505050505050565b600060208284031215610d69578081fd5b8135610c6881610f0f565b60008060408385031215610d86578081fd5b8235610d9181610f0f565b91506020830135610da181610f0f565b809150509250929050565b60008060408385031215610d86578182fd5b600060208284031215610dcf578081fd5b81518015158114610c68578182fd5b600060208284031215610def578081fd5b5035919050565b600060208284031215610e07578081fd5b5051919050565b60008251815b81811015610e2e5760208186018101518583015201610e14565b81811115610e3c5782828501525b509190910192915050565b6001600160a01b03929092168252602082015260400190565b60208082526011908201527006e6f7420612076616c696420455243323607c1b604082015260600190565b60008219821115610e9e57610e9e610ef9565b500190565b600082610ebe57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610edd57610edd610ef9565b500290565b600082821015610ef457610ef4610ef9565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610f2457600080fd5b5056fea26469706673582212207fb4d3a61afba30a4a286eec3399c02627c74e97615727fbe0711ac09b8fe7eb64736f6c63430008040033";

export class TheFoundation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    payees: string[],
    shares: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TheFoundation> {
    return super.deploy(
      payees,
      shares,
      overrides || {}
    ) as Promise<TheFoundation>;
  }
  getDeployTransaction(
    payees: string[],
    shares: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(payees, shares, overrides || {});
  }
  attach(address: string): TheFoundation {
    return super.attach(address) as TheFoundation;
  }
  connect(signer: Signer): TheFoundation__factory {
    return super.connect(signer) as TheFoundation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TheFoundationInterface {
    return new utils.Interface(_abi) as TheFoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TheFoundation {
    return new Contract(address, _abi, signerOrProvider) as TheFoundation;
  }
}
