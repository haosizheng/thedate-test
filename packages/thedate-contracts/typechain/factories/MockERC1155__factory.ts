/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC1155, MockERC1155Interface } from "../MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200003e565b50620000383362000057565b6200018c565b805162000053906002906020840190620000a9565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000b7906200014f565b90600052602060002090601f016020900481019282620000db576000855562000126565b82601f10620000f657805160ff191683800117855562000126565b8280016001018555821562000126579182015b828111156200012657825182559160200191906001019062000109565b506200013492915062000138565b5090565b5b8082111562000134576000815560010162000139565b600181811c908216806200016457607f821691505b602082108114156200018657634e487b7160e01b600052602260045260246000fd5b50919050565b61175c806200019c6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610171578063a22cb4651461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c14610101578063156e29f6146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004611185565b610201565b6040519081526020015b60405180910390f35b6100f16100ec3660046112ab565b610298565b60405190151581526020016100d5565b61011461010f3660046112e3565b6102ea565b6040516100d59190611464565b61013461012f3660046111ae565b61037e565b005b610134610144366004611042565b6103c8565b61015c6101573660046111e0565b61045f565b6040516100d59190611423565b6101346105c1565b6003546040516001600160a01b0390911681526020016100d5565b61013461019a36600461114b565b6105f7565b6100f16101ad366004611010565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e93660046110e8565b6106ce565b6101346101fc366004610fef565b610755565b60006001600160a01b0383166102725760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c957506001600160e01b031982166303a24d0760e21b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102f9906115bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906115bf565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b50505050509050919050565b6003546001600160a01b031633146103a85760405162461bcd60e51b81526004016102699061154e565b6103c3838383604051806020016040528060008152506107f0565b505050565b6001600160a01b0385163314806103e457506103e485336101ad565b61044b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610269565b61045885858585856108fa565b5050505050565b606081518351146104c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610269565b6000835167ffffffffffffffff8111156104ee57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610517578160200160208202803683370190505b50905060005b84518110156105b95761057e85828151811061054957634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061057157634e487b7160e01b600052603260045260246000fd5b6020026020010151610201565b82828151811061059e57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526105b281611627565b905061051d565b509392505050565b6003546001600160a01b031633146105eb5760405162461bcd60e51b81526004016102699061154e565b6105f56000610af3565b565b336001600160a01b03831614156106625760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610269565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0385163314806106ea57506106ea85336101ad565b6107485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610269565b6104588585858585610b45565b6003546001600160a01b0316331461077f5760405162461bcd60e51b81526004016102699061154e565b6001600160a01b0381166107e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610269565b6107ed81610af3565b50565b6001600160a01b0384166108505760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610269565b3361086a8160008761086188610c62565b61045888610c62565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061089a9084906115a7565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461045881600087878787610cbb565b815183511461095c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610269565b6001600160a01b0384166109825760405162461bcd60e51b8152600401610269906114bf565b3360005b8451811015610a855760008582815181106109b157634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106109dd57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a2d5760405162461bcd60e51b815260040161026990611504565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a6a9084906115a7565b9250508190555050505080610a7e90611627565b9050610986565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ad5929190611436565b60405180910390a4610aeb818787878787610e26565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610b6b5760405162461bcd60e51b8152600401610269906114bf565b33610b7b81878761086188610c62565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610bbc5760405162461bcd60e51b815260040161026990611504565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610bf99084906115a7565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c59828888888888610cbb565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610caa57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610aeb5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610cff90899089908890889088906004016113de565b602060405180830381600087803b158015610d1957600080fd5b505af1925050508015610d49575060408051601f3d908101601f19168201909252610d46918101906112c7565b60015b610df657610d5561166e565b806308c379a01415610d8f5750610d6a611686565b80610d755750610d91565b8060405162461bcd60e51b81526004016102699190611464565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610269565b6001600160e01b0319811663f23a6e6160e01b14610c595760405162461bcd60e51b815260040161026990611477565b6001600160a01b0384163b15610aeb5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e6a9089908990889088908890600401611380565b602060405180830381600087803b158015610e8457600080fd5b505af1925050508015610eb4575060408051601f3d908101601f19168201909252610eb1918101906112c7565b60015b610ec057610d5561166e565b6001600160e01b0319811663bc197c8160e01b14610c595760405162461bcd60e51b815260040161026990611477565b80356001600160a01b0381168114610f0757600080fd5b919050565b600082601f830112610f1c578081fd5b81356020610f2982611583565b604051610f3682826115fa565b8381528281019150858301600585901b87018401881015610f55578586fd5b855b85811015610f7357813584529284019290840190600101610f57565b5090979650505050505050565b600082601f830112610f90578081fd5b813567ffffffffffffffff811115610faa57610faa611658565b604051610fc1601f8301601f1916602001826115fa565b818152846020838601011115610fd5578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611000578081fd5b61100982610ef0565b9392505050565b60008060408385031215611022578081fd5b61102b83610ef0565b915061103960208401610ef0565b90509250929050565b600080600080600060a08688031215611059578081fd5b61106286610ef0565b945061107060208701610ef0565b9350604086013567ffffffffffffffff8082111561108c578283fd5b61109889838a01610f0c565b945060608801359150808211156110ad578283fd5b6110b989838a01610f0c565b935060808801359150808211156110ce578283fd5b506110db88828901610f80565b9150509295509295909350565b600080600080600060a086880312156110ff578081fd5b61110886610ef0565b945061111660208701610ef0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561113f578182fd5b6110db88828901610f80565b6000806040838503121561115d578182fd5b61116683610ef0565b91506020830135801515811461117a578182fd5b809150509250929050565b60008060408385031215611197578182fd5b6111a083610ef0565b946020939093013593505050565b6000806000606084860312156111c2578283fd5b6111cb84610ef0565b95602085013595506040909401359392505050565b600080604083850312156111f2578182fd5b823567ffffffffffffffff80821115611209578384fd5b818501915085601f83011261121c578384fd5b8135602061122982611583565b60405161123682826115fa565b8381528281019150858301600585901b870184018b1015611255578889fd5b8896505b8487101561127e5761126a81610ef0565b835260019690960195918301918301611259565b5096505086013592505080821115611294578283fd5b506112a185828601610f0c565b9150509250929050565b6000602082840312156112bc578081fd5b813561100981611710565b6000602082840312156112d8578081fd5b815161100981611710565b6000602082840312156112f4578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561132a5781518752958201959082019060010161130e565b509495945050505050565b60008151808452815b8181101561135a5760208185018101518683018201520161133e565b8181111561136b5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906113ac908301866112fb565b82810360608401526113be81866112fb565b905082810360808401526113d28185611335565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061141890830184611335565b979650505050505050565b60208152600061100960208301846112fb565b60408152600061144960408301856112fb565b828103602084015261145b81856112fb565b95945050505050565b6020815260006110096020830184611335565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600067ffffffffffffffff82111561159d5761159d611658565b5060051b60200190565b600082198211156115ba576115ba611642565b500190565b600181811c908216806115d357607f821691505b602082108114156115f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561162057611620611658565b6040525050565b600060001982141561163b5761163b611642565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561168357600481823e5160e01c5b90565b600060443d10156116945790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156116c457505050505090565b82850191508151818111156116dc5750505050505090565b843d87010160208285010111156116f65750505050505090565b611705602082860101876115fa565b509095945050505050565b6001600160e01b0319811681146107ed57600080fdfea264697066735822122065136e1467aed22a8eeb10f717b2231640688c1c760d104d80b6d6f2d4128fd964736f6c63430008040033";

export class MockERC1155__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
