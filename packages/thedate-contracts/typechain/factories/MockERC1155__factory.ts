/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC1155, MockERC1155Interface } from "../MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200003e565b50620000383362000057565b6200018c565b805162000053906002906020840190620000a9565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000b7906200014f565b90600052602060002090601f016020900481019282620000db576000855562000126565b82601f10620000f657805160ff191683800117855562000126565b8280016001018555821562000126579182015b828111156200012657825182559160200191906001019062000109565b506200013492915062000138565b5090565b5b8082111562000134576000815560010162000139565b600181811c908216806200016457607f821691505b602082108114156200018657634e487b7160e01b600052602260045260246000fd5b50919050565b611734806200019c6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610171578063a22cb4651461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c14610101578063156e29f6146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004611135565b610201565b6040519081526020015b60405180910390f35b6100f16100ec366004611263565b610298565b60405190151581526020016100d5565b61011461010f36600461129d565b6102ea565b6040516100d59190611422565b61013461012f36600461115f565b61037e565b005b610134610144366004610fea565b6103c8565b61015c610157366004611192565b61045f565b6040516100d591906113e1565b610134610589565b6003546040516001600160a01b0390911681526020016100d5565b61013461019a3660046110f9565b6105bf565b6100f16101ad366004610fb7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e9366004611094565b610696565b6101346101fc366004610f95565b61071d565b60006001600160a01b0383166102725760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c957506001600160e01b031982166303a24d0760e21b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102f99061157d565b80601f01602080910402602001604051908101604052809291908181526020018280546103259061157d565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b50505050509050919050565b6003546001600160a01b031633146103a85760405162461bcd60e51b81526004016102699061150c565b6103c3838383604051806020016040528060008152506107b8565b505050565b6001600160a01b0385163314806103e457506103e485336101ad565b61044b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610269565b61045885858585856108c2565b5050505050565b606081518351146104c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610269565b6000835167ffffffffffffffff8111156104e0576104e061162c565b604051908082528060200260200182016040528015610509578160200160208202803683370190505b50905060005b84518110156105815761055485828151811061052d5761052d611616565b602002602001015185838151811061054757610547611616565b6020026020010151610201565b82828151811061056657610566611616565b602090810291909101015261057a816115e5565b905061050f565b509392505050565b6003546001600160a01b031633146105b35760405162461bcd60e51b81526004016102699061150c565b6105bd6000610a9f565b565b336001600160a01b038316141561062a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610269565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0385163314806106b257506106b285336101ad565b6107105760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610269565b6104588585858585610af1565b6003546001600160a01b031633146107475760405162461bcd60e51b81526004016102699061150c565b6001600160a01b0381166107ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610269565b6107b581610a9f565b50565b6001600160a01b0384166108185760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610269565b336108328160008761082988610c0e565b61045888610c0e565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610862908490611565565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461045881600087878787610c59565b81518351146109245760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610269565b6001600160a01b03841661094a5760405162461bcd60e51b81526004016102699061147d565b3360005b8451811015610a3157600085828151811061096b5761096b611616565b60200260200101519050600085838151811061098957610989611616565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109d95760405162461bcd60e51b8152600401610269906114c2565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a16908490611565565b9250508190555050505080610a2a906115e5565b905061094e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a819291906113f4565b60405180910390a4610a97818787878787610dc4565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610b175760405162461bcd60e51b81526004016102699061147d565b33610b2781878761082988610c0e565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610b685760405162461bcd60e51b8152600401610269906114c2565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610ba5908490611565565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c05828888888888610c59565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c4857610c48611616565b602090810291909101015292915050565b6001600160a01b0384163b15610a975760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c9d908990899088908890889060040161139c565b602060405180830381600087803b158015610cb757600080fd5b505af1925050508015610ce7575060408051601f3d908101601f19168201909252610ce491810190611280565b60015b610d9457610cf3611642565b806308c379a01415610d2d5750610d0861165e565b80610d135750610d2f565b8060405162461bcd60e51b81526004016102699190611422565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610269565b6001600160e01b0319811663f23a6e6160e01b14610c055760405162461bcd60e51b815260040161026990611435565b6001600160a01b0384163b15610a975760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e08908990899088908890889060040161133e565b602060405180830381600087803b158015610e2257600080fd5b505af1925050508015610e52575060408051601f3d908101601f19168201909252610e4f91810190611280565b60015b610e5e57610cf3611642565b6001600160e01b0319811663bc197c8160e01b14610c055760405162461bcd60e51b815260040161026990611435565b80356001600160a01b0381168114610ea557600080fd5b919050565b600082601f830112610ebb57600080fd5b81356020610ec882611541565b604051610ed582826115b8565b8381528281019150858301600585901b87018401881015610ef557600080fd5b60005b85811015610f1457813584529284019290840190600101610ef8565b5090979650505050505050565b600082601f830112610f3257600080fd5b813567ffffffffffffffff811115610f4c57610f4c61162c565b604051610f63601f8301601f1916602001826115b8565b818152846020838601011115610f7857600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610fa757600080fd5b610fb082610e8e565b9392505050565b60008060408385031215610fca57600080fd5b610fd383610e8e565b9150610fe160208401610e8e565b90509250929050565b600080600080600060a0868803121561100257600080fd5b61100b86610e8e565b945061101960208701610e8e565b9350604086013567ffffffffffffffff8082111561103657600080fd5b61104289838a01610eaa565b9450606088013591508082111561105857600080fd5b61106489838a01610eaa565b9350608088013591508082111561107a57600080fd5b5061108788828901610f21565b9150509295509295909350565b600080600080600060a086880312156110ac57600080fd5b6110b586610e8e565b94506110c360208701610e8e565b93506040860135925060608601359150608086013567ffffffffffffffff8111156110ed57600080fd5b61108788828901610f21565b6000806040838503121561110c57600080fd5b61111583610e8e565b91506020830135801515811461112a57600080fd5b809150509250929050565b6000806040838503121561114857600080fd5b61115183610e8e565b946020939093013593505050565b60008060006060848603121561117457600080fd5b61117d84610e8e565b95602085013595506040909401359392505050565b600080604083850312156111a557600080fd5b823567ffffffffffffffff808211156111bd57600080fd5b818501915085601f8301126111d157600080fd5b813560206111de82611541565b6040516111eb82826115b8565b8381528281019150858301600585901b870184018b101561120b57600080fd5b600096505b848710156112355761122181610e8e565b835260019690960195918301918301611210565b509650508601359250508082111561124c57600080fd5b5061125985828601610eaa565b9150509250929050565b60006020828403121561127557600080fd5b8135610fb0816116e8565b60006020828403121561129257600080fd5b8151610fb0816116e8565b6000602082840312156112af57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156112e6578151875295820195908201906001016112ca565b509495945050505050565b6000815180845260005b81811015611317576020818501810151868301820152016112fb565b81811115611329576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061136a908301866112b6565b828103606084015261137c81866112b6565b9050828103608084015261139081856112f1565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113d6908301846112f1565b979650505050505050565b602081526000610fb060208301846112b6565b60408152600061140760408301856112b6565b828103602084015261141981856112b6565b95945050505050565b602081526000610fb060208301846112f1565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600067ffffffffffffffff82111561155b5761155b61162c565b5060051b60200190565b6000821982111561157857611578611600565b500190565b600181811c9082168061159157607f821691505b602082108114156115b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156115de576115de61162c565b6040525050565b60006000198214156115f9576115f9611600565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561165b5760046000803e5060005160e01c5b90565b600060443d101561166c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561169c57505050505090565b82850191508151818111156116b45750505050505090565b843d87010160208285010111156116ce5750505050505090565b6116dd602082860101876115b8565b509095945050505050565b6001600160e01b0319811681146107b557600080fdfea2646970667358221220f8b39117cea536d40acf6cb61392237e936f0c3660660bfaf1634a8dd66db9d864736f6c63430008070033";

export class MockERC1155__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
