/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestReentrantAttack,
  TestReentrantAttackInterface,
} from "../TestReentrantAttack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "thedate_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "startReentrantAttack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "thedate",
    outputs: [
      {
        internalType: "contract TheDate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161067638038061067683398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6105be6100b860003960008181607b0152818160aa01528181610193015281816102520152818161028101528181610356015261038501526105be6000f3fe6080604052600436106100355760003560e01c80637ac40b101461018157806382752634146101d1578063d0e30db01461017f57005b3661017f576100796040518060400160405280601e81526020017f546573745265656e7472616e7441747461636b20726563656976652025730000815250346101e6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ecfc7ecc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a74a3e9f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010157600080fd5b505afa158015610115573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013991906104c1565b6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016457600080fd5b505af1158015610178573d6000803e3d6000fd5b5050505050005b005b34801561018d57600080fd5b506101b57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b3480156101dd57600080fd5b5061017f61022f565b61022b82826040516024016101fc92919061053e565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261045a565b5050565b6102506040518060600160405280602881526020016105616028913961047b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ecfc7ecc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a74a3e9f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031091906104c1565b6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ecfc7ecc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a74a3e9f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103dc57600080fd5b505afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906104c1565b6040518263ffffffff1660e01b81526004016000604051808303818588803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b5050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6104be8160405160240161048f9190610524565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261045a565b50565b6000602082840312156104d2578081fd5b5051919050565b60008151808452815b818110156104fe576020818501810151868301820152016104e2565b8181111561050f5782602083870101525b50601f01601f19169290920160200192915050565b60208152600061053760208301846104d9565b9392505050565b60408152600061055160408301856104d9565b9050826020830152939250505056fe546573745265656e7472616e7441747461636b2073746172745265656e7472616e7441747461636ba2646970667358221220c1ac2d47f9c14a7eba4fc8bb01bb1f42ce7724222f2967839fb2fb945d4bedff64736f6c63430008040033";

export class TestReentrantAttack__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    thedate_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReentrantAttack> {
    return super.deploy(
      thedate_,
      overrides || {}
    ) as Promise<TestReentrantAttack>;
  }
  getDeployTransaction(
    thedate_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(thedate_, overrides || {});
  }
  attach(address: string): TestReentrantAttack {
    return super.attach(address) as TestReentrantAttack;
  }
  connect(signer: Signer): TestReentrantAttack__factory {
    return super.connect(signer) as TestReentrantAttack__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReentrantAttackInterface {
    return new utils.Interface(_abi) as TestReentrantAttackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReentrantAttack {
    return new Contract(address, _abi, signerOrProvider) as TestReentrantAttack;
  }
}
