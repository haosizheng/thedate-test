/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockFoundation,
  MockFoundationInterface,
} from "../MockFoundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ERC1155PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ERC721PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "releaseERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "releaseERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "releaseERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "releasedERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "totalReleasedERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019f9380380620019f98339810160408190526200003491620003f1565b818181818051825114620000aa5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b60648201526084015b60405180910390fd5b6000825111620000fd5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f207061796565730000000000006044820152606401620000a1565b60005b825181101562000181576200016c8382815181106200012f57634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106200015857634e487b7160e01b600052603260045260246000fd5b60200260200101516200018e60201b60201c565b80620001788162000542565b91505062000100565b505050505050506200058c565b6001600160a01b038216620001fb5760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b6064820152608401620000a1565b600081116200024d5760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a207368617265732061726520300000006044820152606401620000a1565b6001600160a01b03821660009081526002602052604090205415620002c95760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b6064820152608401620000a1565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384169081179091556000908152600260205260408120829055546200033190829062000527565b600055604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b600082601f8301126200038b578081fd5b81516020620003a46200039e8362000501565b620004ce565b80838252828201915082860187848660051b8901011115620003c4578586fd5b855b85811015620003e457815184529284019290840190600101620003c6565b5090979650505050505050565b6000806040838503121562000404578182fd5b82516001600160401b03808211156200041b578384fd5b818501915085601f8301126200042f578384fd5b81516020620004426200039e8362000501565b8083825282820191508286018a848660051b890101111562000462578889fd5b8896505b848710156200049b5780516001600160a01b03811681146200048657898afd5b83526001969096019591830191830162000466565b5091880151919650909350505080821115620004b5578283fd5b50620004c4858286016200037a565b9150509250929050565b604051601f8201601f191681016001600160401b0381118282101715620004f957620004f962000576565b604052919050565b60006001600160401b038211156200051d576200051d62000576565b5060051b60200190565b600082198211156200053d576200053d62000560565b500190565b600060001982141562000559576200055962000560565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61145d806200059c6000396000f3fe6080604052600436106100a05760003560e01c8063a9d2737511610064578063a9d27375146101bd578063cdd9ac38146101dd578063ce7c2ac2146101fd578063d82658461461021d578063e33b7de31461023d578063f9a76be21461025257600080fd5b806319165587146100e557806319766c48146101075780633a98ef391461013a5780638b83209b1461014f5780639852595c1461018757600080fd5b366100e0577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033346040516100d6929190611318565b60405180910390a1005b600080fd5b3480156100f157600080fd5b50610105610100366004611164565b610272565b005b34801561011357600080fd5b50610127610122366004611164565b61043e565b6040519081526020015b60405180910390f35b34801561014657600080fd5b50600054610127565b34801561015b57600080fd5b5061016f61016a36600461128b565b61052f565b6040516001600160a01b039091168152602001610131565b34801561019357600080fd5b506101276101a2366004611164565b6001600160a01b031660009081526003602052604090205490565b3480156101c957600080fd5b506101056101d8366004611214565b61056d565b3480156101e957600080fd5b506101276101f8366004611259565b6106d2565b34801561020957600080fd5b50610127610218366004611164565b6107d3565b34801561022957600080fd5b506101056102383660046111d4565b6107ee565b34801561024957600080fd5b50600154610127565b34801561025e57600080fd5b5061010561026d36600461119c565b610a5e565b6001600160a01b0381166000908152600260205260409020546102eb5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b6000600154476102fb919061138b565b6001600160a01b0383166000908152600360209081526040808320548354600290935290832054939450919261033190856113c3565b61033b91906113a3565b61034591906113e2565b9050806103a85760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b60648201526084016102e2565b6001600160a01b0383166000908152600360205260409020546103cc90829061138b565b6001600160a01b0384166000908152600360205260409020556001546103f390829061138b565b6001556104008382610f06565b7fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b0568382604051610431929190611318565b60405180910390a1505050565b60008161044a81611024565b1561048157610460816336372b0760e01b611058565b61047c5760405162461bcd60e51b81526004016102e290611331565b610512565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104bc57600080fd5b505afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f491906112a3565b10156105125760405162461bcd60e51b81526004016102e290611331565b50506001600160a01b031660009081526005602052604090205490565b60006004828154811061055257634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b8261057781611024565b156105cf5761058d81636cdb3d1360e11b611058565b6105cf5760405162461bcd60e51b81526020600482015260136024820152726e6f7420612076616c6964204552433131353560681b60448201526064016102e2565b60006105da866107d3565b116105f75760405162461bcd60e51b81526004016102e29061135c565b604051637921219560e11b81523060048201526001600160a01b038681166024830152604482018590526064820184905260a06084830152600060a483015285919082169063f242432a9060c401600060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b5050604080516001600160a01b03808b16825289166020820152908101879052606081018690527f12083f7accd14a913497e12d70f5a6426961873c93aff1d18c19f1a725dacfca9250608001905060405180910390a1505050505050565b6000816106de81611024565b15610715576106f4816336372b0760e01b611058565b6107105760405162461bcd60e51b81526004016102e290611331565b6107a6565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561075057600080fd5b505afa158015610764573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078891906112a3565b10156107a65760405162461bcd60e51b81526004016102e290611331565b50506001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6001600160a01b031660009081526002602052604090205490565b816107f881611024565b1561084f5761080e816380ac58cd60e01b611058565b61084f5760405162461bcd60e51b81526020600482015260126024820152716e6f7420612076616c69642045524337323160701b60448201526064016102e2565b600061085a856107d3565b116108775760405162461bcd60e51b81526004016102e29061135c565b6040516331a9108f60e11b815260048101839052839030906001600160a01b03831690636352211e9060240160206040518083038186803b1580156108bb57600080fd5b505afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190611180565b6001600160a01b03161461095a5760405162461bcd60e51b815260206004820152602860248201527f746f6b656e4964206973206e6f742062656c6f6e67696e6720746f207468652060448201526718dbdb9d1c9858dd60c21b60648201526084016102e2565b60405163095ea7b360e01b81526001600160a01b0382169063095ea7b3906109889030908790600401611318565b600060405180830381600087803b1580156109a257600080fd5b505af11580156109b6573d6000803e3d6000fd5b5050604051632142170760e11b81526001600160a01b03841692506342842e0e91506109ea903090899088906004016112f4565b600060405180830381600087803b158015610a0457600080fd5b505af1158015610a18573d6000803e3d6000fd5b505050507f15ea44f8c370b66b7e50b8c17500252d999e4fabfccaad01f2cfab228ea00364858585604051610a4f939291906112f4565b60405180910390a15050505050565b80610a6881611024565b15610a9f57610a7e816336372b0760e01b611058565b610a9a5760405162461bcd60e51b81526004016102e290611331565b610b30565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ada57600080fd5b505afa158015610aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1291906112a3565b1015610b305760405162461bcd60e51b81526004016102e290611331565b6000610b3b846107d3565b11610b585760405162461bcd60e51b81526004016102e29061135c565b6001600160a01b0382166000818152600560205260408082205490516370a0823160e01b81523060048201528593906370a082319060240160206040518083038186803b158015610ba857600080fd5b505afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be091906112a3565b610bea919061138b565b6001600160a01b03808716600090815260066020908152604080832093891683529290529081205491925090610c1f60005490565b610c28886107d3565b610c3290856113c3565b610c3c91906113a3565b610c4691906113e2565b905060008111610c985760405162461bcd60e51b815260206004820152601a60248201527f6163636f756e74206973206e6f7420647565207061796d656e7400000000000060448201526064016102e2565b60405163095ea7b360e01b81526000906001600160a01b0385169063095ea7b390610cc99030908690600401611318565b602060405180830381600087803b158015610ce357600080fd5b505af1158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b919061126b565b905080610d755760405162461bcd60e51b815260206004820152602260248201527f455243323020646f6573206e6f7420617070726f766520746865207061796d656044820152611b9d60f21b60648201526084016102e2565b6040516323b872dd60e01b81526000906001600160a01b038616906323b872dd90610da89030908c9088906004016112f4565b602060405180830381600087803b158015610dc257600080fd5b505af1158015610dd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfa919061126b565b905080610e495760405162461bcd60e51b815260206004820181905260248201527f4552433230207472616e73666572206973206e6f74207375636365737366756c60448201526064016102e2565b6001600160a01b038089166000908152600660209081526040808320938b1683529290529081208054859290610e8090849061138b565b90915550506001600160a01b03871660009081526005602052604081208054859290610ead90849061138b565b9091555050604080516001600160a01b038a811682526020820186905289168183015290517f8197a9e2768bbdb1a86328467612ccc099a6776e4e3a02463608fba4976c659f9181900360600190a15050505050505050565b80471015610f565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102e2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610fa3576040519150601f19603f3d011682016040523d82523d6000602084013e610fa8565b606091505b505090508061101f5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102e2565b505050565b6000611037826301ffc9a760e01b61107b565b80156110525750611050826001600160e01b031961107b565b155b92915050565b600061106383611024565b80156110745750611074838361107b565b9392505050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b03871690617530906110e29086906112bb565b6000604051808303818686fa925050503d806000811461111e576040519150601f19603f3d011682016040523d82523d6000602084013e611123565b606091505b509150915060208151101561113e5760009350505050611052565b81801561115a57508080602001905181019061115a919061126b565b9695505050505050565b600060208284031215611175578081fd5b81356110748161140f565b600060208284031215611191578081fd5b81516110748161140f565b600080604083850312156111ae578081fd5b82356111b98161140f565b915060208301356111c98161140f565b809150509250929050565b6000806000606084860312156111e8578081fd5b83356111f38161140f565b925060208401356112038161140f565b929592945050506040919091013590565b60008060008060808587031215611229578081fd5b84356112348161140f565b935060208501356112448161140f565b93969395505050506040820135916060013590565b600080604083850312156111ae578182fd5b60006020828403121561127c578081fd5b81518015158114611074578182fd5b60006020828403121561129c578081fd5b5035919050565b6000602082840312156112b4578081fd5b5051919050565b60008251815b818110156112db57602081860181015185830152016112c1565b818111156112e95782828501525b509190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526011908201527006e6f7420612076616c696420455243323607c1b604082015260600190565b6020808252601590820152746163636f756e7420686173206e6f2073686172657360581b604082015260600190565b6000821982111561139e5761139e6113f9565b500190565b6000826113be57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156113dd576113dd6113f9565b500290565b6000828210156113f4576113f46113f9565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461142457600080fd5b5056fea2646970667358221220b4459f43fbc2ab6444e1ebfefad9ed7e9debc70874f16a98d5a71a254cecc89064736f6c63430008040033";

export class MockFoundation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    payees: string[],
    shares: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFoundation> {
    return super.deploy(
      payees,
      shares,
      overrides || {}
    ) as Promise<MockFoundation>;
  }
  getDeployTransaction(
    payees: string[],
    shares: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(payees, shares, overrides || {});
  }
  attach(address: string): MockFoundation {
    return super.attach(address) as MockFoundation;
  }
  connect(signer: Signer): MockFoundation__factory {
    return super.connect(signer) as MockFoundation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFoundationInterface {
    return new utils.Interface(_abi) as MockFoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFoundation {
    return new Contract(address, _abi, signerOrProvider) as MockFoundation;
  }
}
