/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721, MockERC721Interface } from "../MockERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a808252694d6f636b45524337323160b01b6020808401828152855180870190965292855284015281519192916200005791600091620000e6565b5080516200006d906001906020840190620000e6565b5050506200008a620000846200009060201b60201c565b62000094565b620001c9565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f4906200018c565b90600052602060002090601f01602090048101928262000118576000855562000163565b82601f106200013357805160ff191683800117855562000163565b8280016001018555821562000163579182015b828111156200016357825182559160200191906001019062000146565b506200017192915062000175565b5090565b5b8082111562000171576000815560010162000176565b600181811c90821680620001a157607f821691505b60208210811415620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b6115d380620001d96000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f2fde38b1461029057600080fd5b806370a08231146101d9578063715018a6146101fa5780638da5cb5b1461020257806395d89b411461021357600080fd5b806323b872dd116100de57806323b872dd1461018d57806340c10f19146101a057806342842e0e146101b35780636352211e146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004611299565b6102a3565b60405190151581526020015b60405180910390f35b6101406102f5565b60405161012f9190611381565b61016061015b3660046112d1565b610387565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611270565b610421565b005b61018b61019b366004611126565b610537565b61018b6101ae366004611270565b610568565b61018b6101c1366004611126565b6105a0565b6101606101d43660046112d1565b6105bb565b6101ec6101e73660046110da565b610632565b60405190815260200161012f565b61018b6106b9565b6006546001600160a01b0316610160565b6101406106ef565b61018b610229366004611236565b6106fe565b61018b61023c366004611161565b6107c3565b61014061024f3660046112d1565b6107fb565b6101236102623660046110f4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018b61029e3660046110da565b6108e3565b60006001600160e01b031982166380ac58cd60e01b14806102d457506001600160e01b03198216635b5e139f60e01b145b806102ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610304906114db565b80601f0160208091040260200160405190810160405280929190818152602001828054610330906114db565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104055760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061042c826105bb565b9050806001600160a01b0316836001600160a01b0316141561049a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103fc565b336001600160a01b03821614806104b657506104b68133610262565b6105285760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103fc565b610532838361097e565b505050565b61054133826109ec565b61055d5760405162461bcd60e51b81526004016103fc9061141b565b610532838383610ae3565b6006546001600160a01b031633146105925760405162461bcd60e51b81526004016103fc906113e6565b61059c8282610c83565b5050565b610532838383604051806020016040528060008152506107c3565b6000818152600260205260408120546001600160a01b0316806102ef5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103fc565b60006001600160a01b03821661069d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103fc565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146106e35760405162461bcd60e51b81526004016103fc906113e6565b6106ed6000610c9d565b565b606060018054610304906114db565b6001600160a01b0382163314156107575760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103fc565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6107cd33836109ec565b6107e95760405162461bcd60e51b81526004016103fc9061141b565b6107f584848484610cef565b50505050565b6000818152600260205260409020546060906001600160a01b031661087a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103fc565b600061089160408051602081019091526000815290565b905060008151116108b157604051806020016040528060008152506108dc565b806108bb84610d22565b6040516020016108cc929190611315565b6040516020818303038152906040525b9392505050565b6006546001600160a01b0316331461090d5760405162461bcd60e51b81526004016103fc906113e6565b6001600160a01b0381166109725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fc565b61097b81610c9d565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109b3826105bb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610a655760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103fc565b6000610a70836105bb565b9050806001600160a01b0316846001600160a01b03161480610aab5750836001600160a01b0316610aa084610387565b6001600160a01b0316145b80610adb57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610af6826105bb565b6001600160a01b031614610b5e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103fc565b6001600160a01b038216610bc05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b610bcb60008261097e565b6001600160a01b0383166000908152600360205260408120805460019290610bf4908490611498565b90915550506001600160a01b0382166000908152600360205260408120805460019290610c2290849061146c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61059c828260405180602001604052806000815250610e3c565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cfa848484610ae3565b610d0684848484610e6f565b6107f55760405162461bcd60e51b81526004016103fc90611394565b606081610d465750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d705780610d5a81611516565b9150610d699050600a83611484565b9150610d4a565b60008167ffffffffffffffff811115610d9957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610dc3576020820181803683370190505b5090505b8415610adb57610dd8600183611498565b9150610de5600a86611531565b610df090603061146c565b60f81b818381518110610e1357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610e35600a86611484565b9450610dc7565b610e468383610f7c565b610e536000848484610e6f565b6105325760405162461bcd60e51b81526004016103fc90611394565b60006001600160a01b0384163b15610f7157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610eb3903390899088908890600401611344565b602060405180830381600087803b158015610ecd57600080fd5b505af1925050508015610efd575060408051601f3d908101601f19168201909252610efa918101906112b5565b60015b610f57573d808015610f2b576040519150601f19603f3d011682016040523d82523d6000602084013e610f30565b606091505b508051610f4f5760405162461bcd60e51b81526004016103fc90611394565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610adb565b506001949350505050565b6001600160a01b038216610fd25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103fc565b6000818152600260205260409020546001600160a01b0316156110375760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103fc565b6001600160a01b038216600090815260036020526040812080546001929061106090849061146c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b03811681146110d557600080fd5b919050565b6000602082840312156110eb578081fd5b6108dc826110be565b60008060408385031215611106578081fd5b61110f836110be565b915061111d602084016110be565b90509250929050565b60008060006060848603121561113a578081fd5b611143846110be565b9250611151602085016110be565b9150604084013590509250925092565b60008060008060808587031215611176578081fd5b61117f856110be565b935061118d602086016110be565b925060408501359150606085013567ffffffffffffffff808211156111b0578283fd5b818701915087601f8301126111c3578283fd5b8135818111156111d5576111d5611571565b604051601f8201601f19908116603f011681019083821181831017156111fd576111fd611571565b816040528281528a6020848701011115611215578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611248578182fd5b611251836110be565b915060208301358015158114611265578182fd5b809150509250929050565b60008060408385031215611282578182fd5b61128b836110be565b946020939093013593505050565b6000602082840312156112aa578081fd5b81356108dc81611587565b6000602082840312156112c6578081fd5b81516108dc81611587565b6000602082840312156112e2578081fd5b5035919050565b600081518084526113018160208601602086016114af565b601f01601f19169290920160200192915050565b600083516113278184602088016114af565b83519083019061133b8183602088016114af565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611377908301846112e9565b9695505050505050565b6020815260006108dc60208301846112e9565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561147f5761147f611545565b500190565b6000826114935761149361155b565b500490565b6000828210156114aa576114aa611545565b500390565b60005b838110156114ca5781810151838201526020016114b2565b838111156107f55750506000910152565b600181811c908216806114ef57607f821691505b6020821081141561151057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561152a5761152a611545565b5060010190565b6000826115405761154061155b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461097b57600080fdfea2646970667358221220727aae13f11a1084b0050c9c4df7b74cc35913296d39d6cf0b09b760f177a0cb64736f6c63430008040033";

export class MockERC721__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC721> {
    return super.deploy(overrides || {}) as Promise<MockERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
